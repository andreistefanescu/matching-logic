<top>
  <feasible> 4 </feasible>
  <infeasible> 1 </infeasible>
  <mainOut> . </mainOut>
  <tasks>
    <funTask>
      <funId> dequeue </funId>
      <task>
        <form>
          ~ 0 = #Int5
          /\~ 0 = #Int8
          /\~ 0 = FreeVar(x)
          /\A_Seq @[v_Int]=[#Int4]@[#Int7]@ #Seq9
          /\A_Seq @[v_Int]= #?A1_Seq11 @[#Int4]@[#Int7]@[#Int12]@ #Seq14
        </form>
        <subst>
          !vl_Int <- #Int7
          !n_Int <- #Int8
          !vp_Int <- #Int4
          !in_frame_2 <- #in_frame_1
          !out_frame_2 <- #out_frame_1
          !stack_frame_2 <- #stack_frame_1
          !heap_frame_2 <- #heap_frame_1
        </subst>
        <taskType> ... </taskType>
        <config>
          <k>
            @assert
            <config>
              <counter> ... </counter>
              <fname> ... </fname>
              <program> ... </program>
              <in> #in_frame_1 </in>
              <out> #out_frame_1 </out>
              <stack> #stack_frame_1 </stack>
              <env>
                last |-> last_Int
                prelast |-> prelast_Int
                x |-> x_Int
              </env>
              <fun> ... </fun>
              <heap>
                #heap_frame_1
                list(#Int8)(?A2_Seq)
                lseg(x_Int,prelast_Int)(?A1_Seq)
                last_Int |-> #Int7 : listNode.val
                prelast_Int |-> #Int4 : listNode.val
                1 + last_Int |-> #Int8 : listNode.next
                1 + prelast_Int |-> last_Int : listNode.next
              </heap>
              <struct> ... </struct>
              <tenv> ... </tenv>
            </config>
            /\ A_Seq @[v_Int]= ?A1_Seq @[#Int4]@[#Int7]@ ?A2_Seq
            ~>disolveTask
          </k>
          <counter> ... </counter>
          <fname> ... </fname>
          <program> ... </program>
          <in> #in_frame_1 </in>
          <out> #out_frame_1 </out>
          <stack> #stack_frame_1 </stack>
          <env>
            last |-> #Int8
            prelast |-> #last_Int11
            x |-> #x_Int11
          </env>
          <fun> ... </fun>
          <heap>
            #heap_frame_1
            list(#Int13)(#Seq14)
            lseg(#x_Int11,#prelast_Int11)(#?A1_Seq11)
            #Int8 |-> #Int12 : listNode.val
            1 + #Int8 |-> #Int13 : listNode.next
            1 + #last_Int11 |-> #Int8 : listNode.next
            1 + #prelast_Int11 |-> #last_Int11 : listNode.next
            #last_Int11 |-> #Int7 : listNode.val
            #prelast_Int11 |-> #Int4 : listNode.val
          </heap>
          <struct> ... </struct>
          <tenv> ... </tenv>
        </config>
      </task>
    </funTask>
  </tasks>
  <check> ... </check>
</top>