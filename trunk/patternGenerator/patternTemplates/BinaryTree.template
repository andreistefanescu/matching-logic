kmod BINARY-TREE-HP is
  including MATCHC-SEMANTICS
          + MATHEMATICAL-SEQUENCE-BUILTIN-MODULE
          + MATHEMATICAL-TREE-BUILTIN-MODULE

  kvar N : Nat
  kvar P P' Q Q1 Q2 : Int++
  kvar I : Int++
  VARGEN  kvar Alpha : Seq++
  kvar Sigma Tau : Tree++
  kvar H : Map
  kvar K : K
  kvar Phi : Formula
  kvar CfgItems TaskItems : Bag


*** Definition of Trees ***
  rule
  (
    <task>
      <taskType> Run </taskType>
      <config>
        <k> derive(P') ~> K </k>
        <heap> hpname(P)(Tau) H </heap>
        <counter> N </counter>
        CfgItems
      </config>
      <form> Phi </form>
      TaskItems
    </task>
  =>
    <task>
      <taskType> Run </taskType>
      <config>
        <k> derive(P') ~> K </k>
        <heap> H </heap>
        <counter> N </counter>
        CfgItems
      </config>
      <form> Phi /\ (P === 0) /\ (Tau === upsilon) </form>
      TaskItems
    </task>
    <task>
      <taskType> Run </taskType>
      <config>
        <k> K </k>
        <heap>
          UNROLL
  [structural]

  rule
    <heap_> hpname(0)(Tau) => .Map <_/heap>
    <form> Phi => Phi /\ Tau === upsilon </form>
  [structural]
  rule
    <heap_> hpname(P)(upsilon) => .Map <_/heap>
    <form> Phi => Phi /\ P === 0 <_/form>
  [structural]

  rule
    <taskType> Hypothesis </taskType>
    <heap_>
       SROLL
    <_/heap>

  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        LROLL
    <_/heap>

  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        RROLL
    <_/heap>

  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        CROLL
    <_/heap>
endkm 
