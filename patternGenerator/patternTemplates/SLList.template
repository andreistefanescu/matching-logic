kmod HPNAME-HP is
  including MATCHC-SEMANTICS + MATHEMATICAL-SEQUENCE-BUILTIN-MODULE

  kvar N : Nat
  kvar P P' Q Q1 Q2 : Int++
  VARGEN
  kvar Alpha Beta : Seq++
  kvar H : Map
  kvar K : K
  kvar Phi : Formula
  kvar CfgItems TaskItems : Bag


*** Definition of Lists***
  rule
    <task>
      <taskType> Run </taskType>
      <config>
        <k> derive(P') ~> K </k>
        <heap> hpname(P)(Alpha) H </heap>
        <counter> N </counter>
        CfgItems
      </config>
      <form> Phi </form>
      TaskItems
    </task>
  =>
    <task>
      <taskType> Run </taskType>
      <config>
        <k> derive(P') ~> K </k>
        <heap> H </heap> 
        <counter> N </counter>
        CfgItems
      </config>
      <form> Phi /\ (P === 0) /\ (Alpha === epsilon) </form>
      TaskItems
    </task>
    <task>
      <taskType> Run </taskType>
      <config >
        <k> K </k>
        <heap>
    SIMPLEUNROLL
  [structural]

  rule
    <taskType> Run </taskType>
    <heap>
        hpname(P)(Alpha)
      =>
        SIMPLEUNROLING
  [structural]

  rule
    <heap_> hpname(0)(Alpha) => .Map <_/heap>
    <form> Phi => Phi /\ Alpha === epsilon </form>
  [structural]
  rule
    <heap_> hpname(P)(epsilon) => .Map <_/heap>
    <form> Phi => Phi /\ P === 0 </form>
  [structural]

  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        SIMPLEROLL
    <_/heap>
  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        COMPLEXROLL
    <_/heap>


*** Definition of List Segments***
  rule
    <task>
      <taskType> Run </taskType>
      <config>
        <k> derive(P') ~> K </k>
        <heap> hpnameseg(P, Q)(Alpha) H </heap>
        <counter> N </counter>
        CfgItems
      </config>
      <form> Phi </form>
      TaskItems
    </tasks>
  =>
    <task>
      <taskType> Run </taskType>
      <config>
        <k> derive(P') ~> K </k>
        <heap> H </heap> 
        <counter> N </counter>
        CfgItems
      </config>
      <form> Phi /\ (P === Q) /\ (Alpha === epsilon) </form>
      TaskItems
    </task>
    <task>
      <taskType> Run </taskType>
      <config >
        <k> K </k>
        <heap>
          SUNROLLSEG
  [structural]

  rule
    <heap_> hpnameseg(P, P)(Alpha) => .Map <_/heap>
    <form> Phi => Phi /\ Alpha === epsilon </form>
  [structural]
  rule
    <heap> hpnameseg(P, 0)(Alpha) => hpname(P)(Alpha) <_/heap>
  [structural]

  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        SROLLSEG
    <_/heap>
     
  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        hpnameseg(P, P')(Alpha)
        hpnameseg(P', Q)(Beta)
      =>
        hpnameseg(P, Q)(Alpha @ Beta)
    <_/heap>
     
  rule
    <taskType> Hypothesis </taskType>
    <heap_>
        hpnameseg(P, P')(Alpha)
        hpname(P')(Beta)
      =>
        hpname(P)(Alpha @ Beta)
    <_/heap>
endkm
