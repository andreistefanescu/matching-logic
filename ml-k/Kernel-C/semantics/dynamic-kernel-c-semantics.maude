mod DYNAMIC-KERNEL-C-SEMANTICS is
	including COMMON-KERNEL-C-SEMANTICS .
	
	eq eval(P:Program) = 
		< T >
			< k > P:Program ~> Apply(main) </ k > 
			< env > .Map </ env > 
			< genv > .Map </ genv > 
			< mem > .Map </ mem >  
			< output > .List </ output >
			< callStack > .List </ callStack >
			< loopStack > .List </ loopStack > 
			< nextLoc > 0 </ nextLoc >
			< locals > .Bag </ locals >
			< parameters > .Bag </ parameters >
			< sizes > .Map </ sizes >
			< malloced > .Map </ malloced >
			---< form > .Bag </ form >
		</ T > .
	
	--- throw away annotations
	mb [no-annotations]: rule [annotation(?); => .K] : KSentence .
	
	***(
	Declaration-Specifiers Identifier(Parameter-Type-List){
		Block-Item-List
	}
	***)
	mb [function-definition]: rule 
		< k > [
			Declaration(DS:TogetherList, Direct-Function-Declarator(I:Id, PTL:Parameter-Type-List)){
				B:TogetherList
			}
			=> .K]
		...</ k >
		< genv > [E:Map => E:Map[Loc:Nat / I:Id]]  </ genv >
		< mem > [M:Map => M:Map[Closure(Declaration(DS:TogetherList, Direct-Function-Declarator(I:Id, PTL:Parameter-Type-List)){ B:TogetherList }) / Loc:Nat]] </ mem >
		< nextLoc > [Loc:Nat => sNat(Loc:Nat)] </ nextLoc >
		: KSentence .
	
	
endm
